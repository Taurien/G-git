{"version":3,"sources":["Context/DarkModeContext.jsx","Context/HeaderTitleContext.jsx","g-git.svg","assets/arrow.svg","components/Custom/Header/Header.jsx","Layouts/MainLayout.jsx","components/Custom/Loader/Loader.jsx","components/Home/Form/Form.jsx","components/Custom/UserInfo/UserInfo.jsx","routes/Home/Home.jsx","Hooks/useFetchData.jsx","routes/UserDisplay/UserDisplay.jsx","components/Custom/ReposDisplay/ReposDisplay.jsx","routes/Repos/Repos.jsx","routes/Following/Following.jsx","routes/Followers/Followers.jsx","App.js","reportWebVitals.js","index.js"],"names":["DarkModeContext","createContext","DarkModeProvider","children","useState","darkMode","setDarkMode","data","handleDarkMode","Provider","value","HeaderTitleContext","HeaderTitleContextProvider","infoHeader","setInfoHeader","handleInfoHeader","path","Header","navigate","useNavigate","pathname","useLocation","console","log","useContext","className","onClick","src","Arrow","alt","to","Logo","MainLayout","Loader","Form","handleUser","handleFetchData","action","onSubmit","e","type","placeholder","onChange","target","UserInfo","params","home","login","name","repos_url","avatar","location","hireable","html_url","followers","url","following","public_repos","created_at","errormsg","follow","navToUserDisplay","navToRepos","navToFollowing","navToFollowers","href","rel","Home","userName","setUserName","API","setData","loader","setLoader","a","preventDefault","fetch","response","json","result","useFetchData","avatar_url","message","UserDisplay","useParams","userDisplayInf","setUserDisplayInf","useEffect","testx","ReposDisplay","full_name","updated_at","Repos","userRepos","setUserRepos","length","map","repo","index","Following","userFollowing","setUserFollowing","user","Followers","userFollowers","setUserFollowers","App","exact","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43f1a90a.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\n//crear context\r\nconst DarkModeContext = createContext()\r\n\r\n//Provider\r\nconst DarkModeProvider = ({ children }) => {\r\n    \r\n    const [darkMode, setDarkMode] = useState(false)\r\n\r\n    const handleDarkMode = () => setDarkMode(!darkMode)\r\n\r\n    const data = {\r\n        darkMode, \r\n        handleDarkMode,\r\n    }\r\n\r\n    return (\r\n        <DarkModeContext.Provider value={ data }>\r\n        {children}\r\n        </DarkModeContext.Provider>\r\n    )\r\n}\r\n\r\nexport { DarkModeProvider }\r\nexport default DarkModeContext\r\n","import React, { createContext, useState } from 'react'\r\n\r\n//create\r\nconst HeaderTitleContext = createContext()\r\n\r\n//provider\r\nconst HeaderTitleContextProvider = ({ children }) => {\r\n    \r\n    const [ infoHeader, setInfoHeader] = useState('G-git')\r\n\r\n    const handleInfoHeader = (path) => setInfoHeader(path)\r\n\r\n    const data = {\r\n        infoHeader,\r\n        handleInfoHeader,\r\n    }\r\n    \r\n    return (\r\n        <HeaderTitleContext.Provider value={ data }>\r\n        {children}\r\n        </HeaderTitleContext.Provider>\r\n    )\r\n}\r\n\r\nexport { HeaderTitleContextProvider }\r\nexport default HeaderTitleContext\r\n","export default __webpack_public_path__ + \"static/media/g-git.c6305904.svg\";","export default __webpack_public_path__ + \"static/media/arrow.1762776f.svg\";","import React, { /*useState, useEffect,*/ useContext } from 'react'\r\nimport { useNavigate, useLocation, Link } from 'react-router-dom'\r\n\r\n//import DarkModeContext from '../../../Context/DarkModeContext'\r\nimport HeaderTitleContext from '../../../Context/HeaderTitleContext'\r\n\r\nimport Logo from '../../../g-git.svg'\r\nimport Arrow from '../../../assets/arrow.svg'\r\n\r\nimport '../Header/Header.style.scss'\r\n\r\nconst Header = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const { pathname } = location\r\n    console.log(pathname)\r\n\r\n    //const { darkMode, handleDarkMode } = useContext(DarkModeContext)\r\n    const { infoHeader } = useContext(HeaderTitleContext)\r\n    //console.log(data)\r\n    //console.log(infoHeader)\r\n\r\n    return (\r\n        <div className={`head  w-full inline-flex justify-between items-center bg-True_Blue`}>\r\n            <span className='int inline-flex items-center'>\r\n                {\r\n                    pathname !== '/G-git' && pathname !== '/taurien.github.io/G-git/' && <img className='h-7' onClick={() => navigate(-1)} src={Arrow} alt=\"Arrow\" />\r\n                }\r\n                <h1>\r\n                    {\r\n                    pathname === '/G-git' ? 'G-git' :\r\n                    pathname === `/user/${infoHeader}/repos` ? <><span>{infoHeader}</span> Repos</> :\r\n                    pathname === `/user/${infoHeader}/following` ? <><span>{infoHeader}</span> follows</> :\r\n                    pathname === `/user/${infoHeader}/followers` ? <><span>{infoHeader}</span>'s followers</> :\r\n                    'G-git'\r\n                    }\r\n                </h1>\r\n            </span>\r\n            \r\n            <Link to='/G-git'><img src={Logo} alt=\"Logo\" /></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\n\r\nimport Header from '../components/Custom/Header/Header'\r\n\r\nconst MainLayout = ({ children }) => {\r\n\r\n    //const { children } = params\r\n    //console.log(params)\r\n    //console.log(route)\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainLayout","import React from 'react'\r\n\r\nimport '../Loader/Loader.styles.scss'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='self-center loader'></div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\n\r\nimport '../Form/Form.style.scss'\r\n\r\nconst Form = ({ handleUser, handleFetchData }) => {\r\n\r\n    return (\r\n        <form \r\n            action=''\r\n            onSubmit={e => handleFetchData(e)}\r\n            className='self-center grid'\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                placeholder='Name'\r\n                onChange={({ target }) => handleUser(target)}\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                value='¡Search!'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport '../UserInfo/UserInfo.style.scss'\r\n\r\nexport const UserInfo = (params) => {\r\n    \r\n    let navigate = useNavigate()\r\n\r\n    const {\r\n        home,\r\n        login,\r\n        repos_url,\r\n        name,\r\n        avatar,\r\n        location,\r\n        hireable,\r\n        html_url,\r\n        url,\r\n        followers,\r\n        following,\r\n        public_repos,\r\n        created_at,\r\n        errormsg,\r\n        follow\r\n    } = params\r\n    //console.log(html_url)\r\n\r\n    const navToUserDisplay = () => {\r\n        navigate({ pathname: `/user/${login}` })\r\n    }\r\n    const navToRepos = () => {\r\n        navigate({ pathname: `/user/${login}/repos` })\r\n    }\r\n    const navToFollowing = () => {\r\n        navigate({ pathname: `/user/${login}/following` })\r\n    }\r\n    const navToFollowers = () => {\r\n        navigate({ pathname: `/user/${login}/followers` })\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={`usercard self-center flex flex-col items-center ${home ? 'test789 cardEffect' : ''} ${created_at ? 'test456 cardEffect' : ''} ${follow && 'test123'}`}>\r\n            {\r\n                created_at ? (\r\n                    <>\r\n                        <span>Meet \"{<b>{login}</b>}\" {name && <>AKA <b><i>{name}</i></b></>}</span>\r\n                        <img src={avatar} alt={name} />\r\n                        <p>{location}</p>\r\n                        <span className={hireable ? 'greenDot' : 'redDot' }>Hireable</span>\r\n                        <div className='numbers inline-flex justify-between'>\r\n                            <span onClick={navToRepos} className='flex flex-col items-center'>\r\n                                <p><b>Repos</b></p>\r\n                                <p>{public_repos}</p>\r\n                            </span>\r\n                            <span onClick={navToFollowing} className='flex flex-col items-center'>\r\n                                <p><b>Following</b></p>\r\n                                <p>{following}</p>\r\n                            </span>\r\n                            <span onClick={navToFollowers} className='flex flex-col items-center'>\r\n                                <p><b>Followers</b></p>\r\n                                <p>{followers}</p>\r\n                            </span>\r\n                        </div>\r\n                        <span className='flex flex-col items-center'>\r\n                            <p><b>Created at:</b></p>\r\n                            <p>{created_at}</p>\r\n                        </span>\r\n                        <a href={html_url} target=\"_blank\" rel='noreferrer'>See on Github</a>\r\n                    </>\r\n                ) : (\r\n                    errormsg ? (\r\n                        <>\r\n                            <p>Invalid. User not found</p>\r\n                        </>\r\n                    ) : (\r\n                        follow ? (\r\n                            <>\r\n                                <p>{login}</p>\r\n                                <img src={avatar} alt={name} />\r\n                                <div className='numbers inline-flex justify-center'>\r\n                                    <span onClick={navToRepos} className=''>\r\n                                        <p><b></b>Repos</p>\r\n                                    </span>\r\n                                </div>\r\n                                <button onClick={navToUserDisplay}>See more</button>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <span><b>{login}</b></span>\r\n                                <img src={avatar} alt={name} />\r\n                                <span><i>{location}</i></span>\r\n                                <div className='numbers inline-flex justify-between'>\r\n                                    <span onClick={navToRepos} className='flex flex-col items-center'>\r\n                                        <p><b>Repos</b></p>\r\n                                        {\r\n                                            public_repos && <p>{public_repos}</p>\r\n                                        }\r\n                                    </span>\r\n                                    <span onClick={navToFollowing} className='flex flex-col items-center'>\r\n                                        <p><b>Following</b></p>\r\n                                        {\r\n                                            following && <p>{following}</p>\r\n                                        }\r\n                                    </span>\r\n                                    <span onClick={navToFollowers} className='flex flex-col items-center'>\r\n                                        <p><b>Followers</b></p>\r\n                                        {\r\n                                            followers && <p>{followers}</p>\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                                <button onClick={navToUserDisplay}>See more</button>\r\n                            </>\r\n                        )\r\n                        \r\n                    )\r\n                    \r\n                )\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserInfo","import React, { useState, /*useEffect*/ } from 'react'\r\n\r\nimport Loader from '../../components/Custom/Loader/Loader'\r\nimport Form from '../../components/Home/Form/Form'\r\nimport UserInfo from '../../components/Custom/UserInfo/UserInfo'\r\n\r\nimport '../Home/Home.style.scss'\r\n\r\n//custom hooks\r\nimport { useFetchData } from '../../Hooks/useFetchData'\r\n\r\n\r\nconst Home = () => {\r\n\r\n    \r\n    //States\r\n    const [ userName, setUserName ] = useState('')\r\n    //const [ userData, setUserData ]  = useState(null)\r\n    //const [ loader, setLoader ] = useState(false)\r\n    \r\n    //use custom hook\r\n    const { data, loader, handleFetchData } = useFetchData(`https://api.github.com/users/${userName}`)\r\n\r\n\r\n    const handleUser = ( { value } ) => {\r\n        setUserName(value)\r\n    }\r\n\r\n    //console.log(data)\r\n\r\n\r\n    return (\r\n        <div className='home flex flex-col w-full'>\r\n            <Form\r\n                handleUser={handleUser}\r\n                userName={userName}\r\n                handleFetchData={handleFetchData}\r\n            /> \r\n\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n\r\n            {\r\n                data && <UserInfo\r\n                    home={true}\r\n                    login={data.login}\r\n                    name={data.name}\r\n                    avatar={data.avatar_url}\r\n                    location={data.location}\r\n                    public_repos={data.public_repos}\r\n                    followers={data.followers}\r\n                    following={data.following}\r\n                    errormsg={data?.message}\r\n                />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { useState/*, useEffect*/ } from 'react'\r\n\r\nexport const useFetchData = API => {\r\n\r\n    const [ data, setData ] = useState(null)\r\n    const [ loader, setLoader ] = useState(false)\r\n    \r\n    const handleFetchData = async e => {\r\n        e.preventDefault()\r\n        setData(null)\r\n        setLoader(true)\r\n        const response = await fetch(API)\r\n        const result = await response.json()\r\n        setData(result)\r\n        setLoader(false)\r\n        /*setTimeout(() => {\r\n            setData(result)\r\n            setLoader(false)\r\n        }, 1500)*/\r\n    }\r\n\r\n    //console.log(data)\r\n\r\n    return { data, loader, handleFetchData }\r\n\r\n}","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/Custom/Loader/Loader'\r\nimport UserInfo from '../../components/Custom/UserInfo/UserInfo'\r\n\r\n//import { useFetchData } from '../../Hooks/useFetchData'\r\n\r\nimport HeaderTitleContext from '../../Context/HeaderTitleContext'\r\n\r\nimport '../UserDisplay/UserDisplay.style.scss'\r\n\r\nconst UserDisplay = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const { login } = useParams()\r\n    const [ userDisplayInf, setUserDisplayInf ] = useState(null)\r\n    const [ loader, setLoader ] = useState(false)\r\n    \r\n    //const { data, loader } = useFetchData(`https://api.github.com/users/${login}`)\r\n\r\n    const { handleInfoHeader } = useContext(HeaderTitleContext)\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        const testx = async () => {\r\n            handleInfoHeader(login)\r\n            setUserDisplayInf(null)\r\n            setLoader(true)\r\n            const API = `https://api.github.com/users/${login}`\r\n            const response = await fetch(API)\r\n            const result = await response.json()\r\n            setUserDisplayInf(result)\r\n            setLoader(false)\r\n        }\r\n\r\n        testx()\r\n    }, [ login, handleInfoHeader ])\r\n\r\n    //console.log(data)\r\n\r\n    return (\r\n        <div className='userDisplay flex flex-col'>\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                userDisplayInf && <UserInfo\r\n                    login={userDisplayInf.login}\r\n                    name={userDisplayInf.name}\r\n                    repos_url={userDisplayInf.repos_url}\r\n                    avatar={userDisplayInf.avatar_url}\r\n                    location={userDisplayInf.location}\r\n                    hireable={userDisplayInf.hireable}\r\n                    html_url={userDisplayInf.html_url}\r\n                    followers={userDisplayInf.followers}\r\n                    following={userDisplayInf.following}\r\n                    public_repos={userDisplayInf.public_repos}\r\n                    created_at={userDisplayInf.created_at}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDisplay\r\n","import React from 'react'\r\n\r\nimport '../ReposDisplay/ReposDisplay.style.scss'\r\n\r\nconst ReposDisplay = (params) => {\r\n\r\n    const {\r\n        name,\r\n        full_name,\r\n        html_url,\r\n        created_at,\r\n        updated_at\r\n    } = params\r\n\r\n    return (\r\n        <a className='repolink' href={html_url} target=\"_blank\" rel='noreferrer'>\r\n            <div className='reposcard flex flex-col items-center'>\r\n                <p><b>{full_name}</b></p>\r\n                <p><b>Created:</b></p>\r\n                <p>{created_at}</p>\r\n                <p><b>Updated:</b></p>\r\n                <p>{updated_at}</p>\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default ReposDisplay\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport ReposDisplay from '../../components/Custom/ReposDisplay/ReposDisplay'\r\nimport Loader from '../../components/Custom/Loader/Loader'\r\n\r\n//import { useFetchData } from '../../Hooks/useFetchData'\r\n\r\nimport HeaderTitleContext from '../../Context/HeaderTitleContext'\r\n\r\nimport '../Repos/Repos.style.scss'\r\n\r\nconst Repos = () => {\r\n    const navigate = useNavigate()\r\n    const { login } = useParams()\r\n    const [ userRepos, setUserRepos ] = useState(null)\r\n    const [ loader, setLoader ] = useState(false)\r\n\r\n    //const { data, loader } = useFetchData(`https://api.github.com/users/${login}/repos`)\r\n\r\n    const { handleInfoHeader } = useContext(HeaderTitleContext)\r\n\r\n    useEffect(() => {\r\n        \r\n        const testx = async () => {\r\n            handleInfoHeader(login)\r\n            setUserRepos(null)\r\n            setLoader(true)\r\n            const API = `https://api.github.com/users/${login}/repos`\r\n            const response = await fetch(API)\r\n            const result = await response.json()\r\n            setUserRepos(result)\r\n            setLoader(false)\r\n        }\r\n\r\n        testx()\r\n    }, [ login, handleInfoHeader ])\r\n\r\n    return (\r\n        <div className='repos flex flex-col justify-evenly'>\r\n            \r\n            <div className={`reposCtn self-center ${loader ? 'flex justify-center' : ( userRepos?.length > 0? 'grid' : 'flex justify-center' ) }`}>\r\n                {\r\n                    userRepos && userRepos.length > 0 ? (\r\n                        userRepos.map( (repo, index) => (\r\n                            <ReposDisplay\r\n                                key={index}\r\n                                name={repo.name}\r\n                                full_name={repo.full_name}\r\n                                html_url={repo.html_url}\r\n                                created_at={repo.created_at}\r\n                                updated_at={repo.updated_at}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        loader ? <Loader/> : <p className='self-center'>no hubo</p>  \r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Repos\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/Custom/Loader/Loader'\r\nimport UserInfo from '../../components/Custom/UserInfo/UserInfo'\r\n\r\n//import { useFetchData } from '../../Hooks/useFetchData'\r\n\r\nimport HeaderTitleContext from '../../Context/HeaderTitleContext'\r\n\r\nimport '../../styles/Follow.style.scss'\r\n\r\nconst Following = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const { login } = useParams()\r\n    const [ userFollowing, setUserFollowing ] = useState(null)\r\n    const [ loader, setLoader ] = useState(false)\r\n\r\n    //use custom hook\r\n    //const { data, loader, handleFetchData } = useFetchData(`https://api.github.com/users/${login}/following`)\r\n\r\n    const { handleInfoHeader } = useContext(HeaderTitleContext)\r\n\r\n    useEffect(() => {\r\n        \r\n        const testx = async () => {\r\n            handleInfoHeader(login)\r\n            setUserFollowing(null)\r\n            setLoader(true)\r\n            const API = `https://api.github.com/users/${login}/following`\r\n            const response = await fetch(API)\r\n            const result = await response.json()\r\n            setUserFollowing(result)\r\n            setLoader(false)\r\n        }\r\n\r\n        testx()\r\n    }, [ login, handleInfoHeader ])\r\n\r\n    return (\r\n        <div className='follow flex flex-col justify-evenly'>\r\n            \r\n            <div className={`usersCtn self-center ${loader ? 'flex justify-center' : ( userFollowing?.length > 0? 'grid justify-items-center' : 'flex justify-center') }`}>\r\n                {\r\n                    userFollowing && userFollowing.length > 0 ? (\r\n                        userFollowing.map( (user, index) => (\r\n                            <UserInfo follow={true}\r\n                                key={index}\r\n                                login={user.login}\r\n                                avatar={user.avatar_url}\r\n                                url={user.html_url}\r\n                                repos_url={user.repos_url}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        loader ? <Loader/> : <p className='self-center'>no hubo</p>  \r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Following\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/Custom/Loader/Loader'\r\nimport UserInfo from '../../components/Custom/UserInfo/UserInfo'\r\n\r\n//import { useFetchData } from '../../Hooks/useFetchData'\r\n\r\nimport HeaderTitleContext from '../../Context/HeaderTitleContext'\r\n\r\nimport '../../styles/Follow.style.scss'\r\n\r\nconst Followers = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const { login } = useParams()\r\n    const [ userFollowers, setUserFollowers ] = useState(null)\r\n    const [ loader, setLoader ] = useState(false)\r\n\r\n    //const { data, loader } = useFetchData(`https://api.github.com/users/${login}/followers`)\r\n\r\n    const { handleInfoHeader } = useContext(HeaderTitleContext)\r\n\r\n    useEffect(() => {\r\n        \r\n        const testx = async () => {\r\n            handleInfoHeader(login)\r\n            setUserFollowers(null)\r\n            setLoader(true)\r\n            const API = `https://api.github.com/users/${login}/followers`\r\n            const response = await fetch(API)\r\n            const result = await response.json()\r\n            setUserFollowers(result)\r\n            setLoader(false)\r\n        }\r\n\r\n        testx()\r\n    }, [ login, handleInfoHeader ])\r\n\r\n    return (\r\n        <div className='follow flex flex-col justify-evenly'>\r\n            \r\n            <div className={`usersCtn self-center ${loader ? 'flex justify-center' : ( userFollowers?.length > 0? 'grid justify-items-center' : 'flex justify-center') }`}>\r\n                {\r\n                    userFollowers && userFollowers.length > 0 ? (\r\n                        userFollowers.map( (user, index) => (\r\n                            <UserInfo follow={true}\r\n                                key={index}\r\n                                login={user.login}\r\n                                avatar={user.avatar_url}\r\n                                url={user.html_url}\r\n                                repos_url={user.repos_url}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        loader ? <Loader/> : <p className='self-center'>no hubo</p> \r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Followers\r\n","import React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\n\nimport { DarkModeProvider } from \"./Context/DarkModeContext\";\nimport { HeaderTitleContextProvider } from \"./Context/HeaderTitleContext\";\n\nimport Div100vh from \"react-div-100vh\";\nimport MainLayout from \"./Layouts/MainLayout\";\n\nimport Home from './routes/Home/Home';\nimport UserDisplay from './routes/UserDisplay/UserDisplay';\nimport Repos from './routes/Repos/Repos';\nimport Following from './routes/Following/Following';\nimport Followers from './routes/Followers/Followers';\n\nimport './styles/App.scss';\n\nfunction App() {\n\n\n  return (\n    <Div100vh className='flex flex-col'>\n      <HeaderTitleContextProvider>\n        <DarkModeProvider>\n          <MainLayout>\n            <Routes>\n              <Route exact path=\"/G-git\" element={<Home />} />\n              <Route path=\"user/:login\" element={<UserDisplay />} />\n              <Route path=\"user/:login/repos\" element={<Repos />} />\n              <Route path=\"user/:login/following\" element={<Following />} />\n              <Route path=\"user/:login/followers\" element={<Followers />} />\n              <Route path=\"*\" element={<p>Holi 404!!</p>} />\n            </Routes>\n          </MainLayout>\n        </DarkModeProvider>\n      </HeaderTitleContextProvider>\n    </Div100vh>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}