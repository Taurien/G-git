{"version":3,"sources":["Context/DarkModeContext.jsx","Context/HeaderTitleContext.jsx","g-git.svg","components/Custom/Header/Header.jsx","Layouts/MainLayout.jsx","components/Custom/Loader/Loader.jsx","components/Home/Form/Form.jsx","components/Custom/UserInfo/UserInfo.jsx","routes/Home/Home.jsx","Hooks/useFetchData.jsx","routes/UserDisplay/UserDisplay.jsx","components/Custom/ReposDisplay/ReposDisplay.jsx","routes/Repos/Repos.jsx","routes/Following/Following.jsx","routes/Followers/Followers.jsx","App.js","reportWebVitals.js","index.js"],"names":["DarkModeContext","createContext","DarkModeProvider","children","useState","darkMode","setDarkMode","data","handleDarkMode","Provider","value","HeaderTitleContext","HeaderTitleContextProvider","infoHeader","setInfoHeader","handleInfoHeader","path","Header","pathname","useLocation","useContext","className","to","src","Logo","alt","MainLayout","Loader","Form","handleUser","handleFetchData","action","onSubmit","e","type","placeholder","onChange","target","UserInfo","params","navigate","useNavigate","home","login","name","repos_url","avatar","location","hireable","html_url","followers","url","following","public_repos","created_at","errormsg","follow","navToUserDisplay","navToRepos","navToFollowing","navToFollowers","onClick","href","rel","Home","userName","setUserName","API","setData","loader","setLoader","a","preventDefault","fetch","response","json","result","useFetchData","avatar_url","message","UserDisplay","useParams","userDisplayInf","setUserDisplayInf","useEffect","testx","ReposDisplay","full_name","updated_at","Repos","userRepos","setUserRepos","length","map","repo","index","Following","userFollowing","setUserFollowing","user","Followers","userFollowers","setUserFollowers","App","exact","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.985ab34e.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\n//crear context\r\nconst DarkModeContext = createContext()\r\n\r\n//Provider\r\nconst DarkModeProvider = ({ children }) => {\r\n    \r\n    const [darkMode, setDarkMode] = useState(false)\r\n\r\n    const handleDarkMode = () => setDarkMode(!darkMode)\r\n\r\n    const data = {\r\n        darkMode, \r\n        handleDarkMode,\r\n    }\r\n\r\n    return (\r\n        <DarkModeContext.Provider value={ data }>\r\n        {children}\r\n        </DarkModeContext.Provider>\r\n    )\r\n}\r\n\r\nexport { DarkModeProvider }\r\nexport default DarkModeContext\r\n","import React, { createContext, useState } from 'react'\r\n\r\n//create\r\nconst HeaderTitleContext = createContext()\r\n\r\n//provider\r\nconst HeaderTitleContextProvider = ({ children }) => {\r\n    \r\n    const [ infoHeader, setInfoHeader] = useState('G-git')\r\n\r\n    const handleInfoHeader = (path) => setInfoHeader(path)\r\n\r\n    const data = {\r\n        infoHeader,\r\n        handleInfoHeader,\r\n    }\r\n    \r\n    return (\r\n        <HeaderTitleContext.Provider value={ data }>\r\n        {children}\r\n        </HeaderTitleContext.Provider>\r\n    )\r\n}\r\n\r\nexport { HeaderTitleContextProvider }\r\nexport default HeaderTitleContext\r\n","export default __webpack_public_path__ + \"static/media/g-git.c6305904.svg\";","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useLocation, Link } from 'react-router-dom'\r\n\r\nimport DarkModeContext from '../../../Context/DarkModeContext'\r\nimport HeaderTitleContext from '../../../Context/HeaderTitleContext'\r\n\r\nimport Logo from '../../../g-git.svg'\r\n\r\nimport '../Header/Header.style.scss'\r\n\r\nconst Header = () => {\r\n\r\n    const location = useLocation()\r\n    const { pathname } = location\r\n    //console.log(pathname)\r\n\r\n    const { darkMode, handleDarkMode } = useContext(DarkModeContext)\r\n    const { infoHeader, handleInfoHeader } = useContext(HeaderTitleContext)\r\n    //console.log(data)\r\n    //console.log(infoHeader)\r\n\r\n    return (\r\n        <div className={`head  w-full inline-flex justify-between items-center ${darkMode? 'bg-Oxford_Blue_3' : 'bg-Dark_Cornflower_Blue' }`}>\r\n            <h1>\r\n                {\r\n                pathname === '/G-git' ? 'G-git' :\r\n                pathname === `/user/${infoHeader}/repos` ? `${infoHeader}'s Repos` :\r\n                pathname === `/user/${infoHeader}/following` ? `${infoHeader} follows` :\r\n                pathname === `/user/${infoHeader}/followers` ? `${infoHeader}'s followers` :\r\n                'G-git'\r\n                }\r\n            </h1>\r\n            {/*<button onClick={handleDarkMode}>\r\n                DarkMode: {darkMode? 'on' : 'off'}\r\n            </button>*/}\r\n            <Link to='/G-git'><img src={Logo} alt=\"Logo\" /></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\n\r\nimport Header from '../components/Custom/Header/Header'\r\n\r\nconst MainLayout = ({ children }) => {\r\n\r\n    //const { children } = params\r\n    //console.log(params)\r\n    //console.log(route)\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainLayout","import React from 'react'\r\n\r\nimport '../Loader/Loader.styles.scss'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='self-center loader'>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\n\r\nimport '../Form/Form.style.scss'\r\n\r\nconst Form = ({ handleUser, handleFetchData }) => {\r\n\r\n    return (\r\n        <form \r\n            action=''\r\n            onSubmit={e => handleFetchData(e)}\r\n            className='self-center grid'\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                placeholder='Name'\r\n                onChange={({ target }) => handleUser(target)}\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                value='¡Search!'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport '../UserInfo/UserInfo.style.scss'\r\n\r\nexport const UserInfo = (params) => {\r\n    \r\n    let navigate = useNavigate()\r\n\r\n    const {\r\n        home,\r\n        login,\r\n        repos_url,\r\n        name,\r\n        avatar,\r\n        location,\r\n        hireable,\r\n        html_url,\r\n        url,\r\n        followers,\r\n        following,\r\n        public_repos,\r\n        created_at,\r\n        errormsg,\r\n        follow\r\n    } = params\r\n    //console.log(html_url)\r\n\r\n    const navToUserDisplay = () => {\r\n        navigate({ pathname: `/user/${login}` })\r\n    }\r\n    const navToRepos = () => {\r\n        navigate({ pathname: `/user/${login}/repos` })\r\n    }\r\n    const navToFollowing = () => {\r\n        navigate({ pathname: `/user/${login}/following` })\r\n    }\r\n    const navToFollowers = () => {\r\n        navigate({ pathname: `/user/${login}/followers` })\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={`usercard self-center flex flex-col items-center ${home ? 'test789' : ''} ${created_at ? 'test456' : ''} ${follow && 'test123'}`}>\r\n            {\r\n                created_at ? (\r\n                    <>\r\n                        <span>Meet \"{<b>{login}</b>}\" {name && <>AKA <b><i>{name}</i></b></>}</span>\r\n                        <img src={avatar} alt={name} />\r\n                        <p>{location}</p>\r\n                        <span>Hireable : {hireable ? 'Y' : 'N'}</span>\r\n                        <div className='numbers inline-flex justify-between'>\r\n                            <span onClick={navToRepos} className='flex flex-col items-center'>\r\n                                <p>Repos</p>\r\n                                <p>{public_repos}</p>\r\n                            </span>\r\n                            <span onClick={navToFollowing} className='flex flex-col items-center'>\r\n                                <p>Following</p>\r\n                                <p>{following}</p>\r\n                            </span>\r\n                            <span onClick={navToFollowers} className='flex flex-col items-center'>\r\n                                <p>Followers</p>\r\n                                <p>{followers}</p>\r\n                            </span>\r\n                        </div>\r\n                        <span className='flex flex-col items-center'>\r\n                            <p>Created at:</p>\r\n                            <p>{created_at}</p>\r\n                        </span>\r\n                        <a href={html_url} target=\"_blank\" rel='noreferrer'><p>See on Github</p></a>\r\n                    </>\r\n                ) : (\r\n                    errormsg ? (\r\n                        <>\r\n                            <p>No existe. Pailangas tangas</p>\r\n                        </>\r\n                    ) : (\r\n                        follow ? (\r\n                            <>\r\n                                <p>{login}</p>\r\n                                <img src={avatar} alt={name} />\r\n                                <div className='numbers inline-flex justify-center'>\r\n                                    <span onClick={navToRepos} className=''>\r\n                                        <p>Repos</p>\r\n                                    </span>\r\n                                </div>\r\n                                <button onClick={navToUserDisplay}>See more</button>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <span><b>{login}</b></span>\r\n                                <img src={avatar} alt={name} />\r\n                                <span><i>{location}</i></span>\r\n                                <div className='numbers inline-flex justify-between'>\r\n                                    <span onClick={navToRepos} className='flex flex-col items-center'>\r\n                                        <p>Repos</p>\r\n                                        {\r\n                                            public_repos && <p>{public_repos}</p>\r\n                                        }\r\n                                    </span>\r\n                                    <span onClick={navToFollowing} className='flex flex-col items-center'>\r\n                                        <p>Following</p>\r\n                                        {\r\n                                            following && <p>{following}</p>\r\n                                        }\r\n                                    </span>\r\n                                    <span onClick={navToFollowers} className='flex flex-col items-center'>\r\n                                        <p>Followers</p>\r\n                                        {\r\n                                            followers && <p>{followers}</p>\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                                <button onClick={navToUserDisplay}>See more</button>\r\n                            </>\r\n                        )\r\n                        \r\n                    )\r\n                    \r\n                )\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserInfo","import React, { useState, /*useEffect*/ } from 'react'\r\n\r\nimport Loader from '../../components/Custom/Loader/Loader'\r\nimport Form from '../../components/Home/Form/Form'\r\nimport UserInfo from '../../components/Custom/UserInfo/UserInfo'\r\n\r\nimport '../Home/Home.style.scss'\r\n\r\n//custom hooks\r\nimport { useFetchData } from '../../Hooks/useFetchData'\r\n\r\n\r\nconst Home = () => {\r\n\r\n    \r\n    //States\r\n    const [ userName, setUserName ] = useState('')\r\n    //const [ userData, setUserData ]  = useState(null)\r\n    //const [ loader, setLoader ] = useState(false)\r\n    \r\n    //use custom hook\r\n    const { data, loader, handleFetchData } = useFetchData(`https://api.github.com/users/${userName}`)\r\n\r\n\r\n    const handleUser = ( { value } ) => {\r\n        setUserName(value)\r\n    }\r\n\r\n    //console.log(data)\r\n\r\n\r\n    return (\r\n        <div className='home flex flex-col w-full'>\r\n            <Form\r\n                handleUser={handleUser}\r\n                userName={userName}\r\n                handleFetchData={handleFetchData}\r\n            /> \r\n\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n\r\n            {\r\n                data && <UserInfo\r\n                    home={true}\r\n                    login={data.login}\r\n                    name={data.name}\r\n                    avatar={data.avatar_url}\r\n                    location={data.location}\r\n                    public_repos={data.public_repos}\r\n                    followers={data.followers}\r\n                    following={data.following}\r\n                    errormsg={data?.message}\r\n                />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { useState/*, useEffect*/ } from 'react'\r\n\r\nexport const useFetchData = API => {\r\n\r\n    const [ data, setData ] = useState(null)\r\n    const [ loader, setLoader ] = useState(false)\r\n    \r\n    const handleFetchData = async e => {\r\n        e.preventDefault()\r\n        setData(null)\r\n        setLoader(true)\r\n        const response = await fetch(API)\r\n        const result = await response.json()\r\n        setData(result)\r\n        setLoader(false)\r\n        /*setTimeout(() => {\r\n            setData(result)\r\n            setLoader(false)\r\n        }, 1500)*/\r\n    }\r\n\r\n    //console.log(data)\r\n\r\n    return { data, loader, handleFetchData }\r\n\r\n}","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/Custom/Loader/Loader'\r\nimport UserInfo from '../../components/Custom/UserInfo/UserInfo'\r\n\r\n//import { useFetchData } from '../../Hooks/useFetchData'\r\n\r\nimport HeaderTitleContext from '../../Context/HeaderTitleContext'\r\n\r\nimport '../UserDisplay/UserDisplay.style.scss'\r\n\r\nconst UserDisplay = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const { login } = useParams()\r\n    const [ userDisplayInf, setUserDisplayInf ] = useState(null)\r\n    const [ loader, setLoader ] = useState(false)\r\n    \r\n    //const { data, loader } = useFetchData(`https://api.github.com/users/${login}`)\r\n\r\n    const { infoHeader, handleInfoHeader } = useContext(HeaderTitleContext)\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        const testx = async () => {\r\n            handleInfoHeader(login)\r\n            setUserDisplayInf(null)\r\n            setLoader(true)\r\n            const API = `https://api.github.com/users/${login}`\r\n            const response = await fetch(API)\r\n            const result = await response.json()\r\n            setUserDisplayInf(result)\r\n            setLoader(false)\r\n        }\r\n\r\n        testx()\r\n    }, [login])\r\n\r\n    //console.log(data)\r\n\r\n    return (\r\n        <div className='userDisplay flex flex-col'>\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n            {\r\n                userDisplayInf && <UserInfo\r\n                    login={userDisplayInf.login}\r\n                    name={userDisplayInf.name}\r\n                    repos_url={userDisplayInf.repos_url}\r\n                    avatar={userDisplayInf.avatar_url}\r\n                    location={userDisplayInf.location}\r\n                    hireable={userDisplayInf.hireable}\r\n                    html_url={userDisplayInf.html_url}\r\n                    followers={userDisplayInf.followers}\r\n                    following={userDisplayInf.following}\r\n                    public_repos={userDisplayInf.public_repos}\r\n                    created_at={userDisplayInf.created_at}\r\n                />\r\n            }\r\n\r\n            <button\r\n            className='self-center'\r\n            onClick={() => navigate(-1)}>Go back</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDisplay\r\n","import React from 'react'\r\n\r\nimport '../ReposDisplay/ReposDisplay.style.scss'\r\n\r\nconst ReposDisplay = (params) => {\r\n\r\n    const {\r\n        name,\r\n        full_name,\r\n        html_url,\r\n        created_at,\r\n        updated_at\r\n    } = params\r\n\r\n    return (\r\n        <a className='repolink' href={html_url} target=\"_blank\" rel='noreferrer'>\r\n            <div className='reposcard flex flex-col items-center'>\r\n                <p>{full_name}</p>\r\n                <p>Created:</p>\r\n                <p>{created_at}</p>\r\n                <p>Updated:</p>\r\n                <p>{updated_at}</p>\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default ReposDisplay\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport ReposDisplay from '../../components/Custom/ReposDisplay/ReposDisplay'\r\nimport Loader from '../../components/Custom/Loader/Loader'\r\n\r\n//import { useFetchData } from '../../Hooks/useFetchData'\r\n\r\nimport HeaderTitleContext from '../../Context/HeaderTitleContext'\r\n\r\nimport '../Repos/Repos.style.scss'\r\n\r\nconst Repos = () => {\r\n    const navigate = useNavigate()\r\n    const { login } = useParams()\r\n    const [ userRepos, setUserRepos ] = useState(null)\r\n    const [ loader, setLoader ] = useState(false)\r\n\r\n    //const { data, loader } = useFetchData(`https://api.github.com/users/${login}/repos`)\r\n\r\n    const { infoHeader, handleInfoHeader } = useContext(HeaderTitleContext)\r\n\r\n    useEffect(() => {\r\n        \r\n        const testx = async () => {\r\n            handleInfoHeader(login)\r\n            setUserRepos(null)\r\n            setLoader(true)\r\n            const API = `https://api.github.com/users/${login}/repos`\r\n            const response = await fetch(API)\r\n            const result = await response.json()\r\n            setUserRepos(result)\r\n            setLoader(false)\r\n        }\r\n\r\n        testx()\r\n    }, [login])\r\n\r\n    return (\r\n        <div className='repos flex flex-col justify-evenly'>\r\n            \r\n            <div className={`reposCtn self-center ${loader ? 'flex justify-center' : ( userRepos?.length > 0? 'grid' : 'flex justify-center' ) }`}>\r\n                {\r\n                    userRepos && userRepos.length > 0 ? (\r\n                        userRepos.map( (repo, index) => (\r\n                            <ReposDisplay\r\n                                key={index}\r\n                                name={repo.name}\r\n                                full_name={repo.full_name}\r\n                                html_url={repo.html_url}\r\n                                created_at={repo.created_at}\r\n                                updated_at={repo.updated_at}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        loader ? <Loader/> : <p className='self-center'>no hubo</p>  \r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <button \r\n            className='self-center'\r\n            onClick={() => navigate(-1)}>Go back</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Repos\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/Custom/Loader/Loader'\r\nimport UserInfo from '../../components/Custom/UserInfo/UserInfo'\r\n\r\n//import { useFetchData } from '../../Hooks/useFetchData'\r\n\r\nimport HeaderTitleContext from '../../Context/HeaderTitleContext'\r\n\r\nimport '../../styles/Follow.style.scss'\r\n\r\nconst Following = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const { login } = useParams()\r\n    const [ userFollowing, setUserFollowing ] = useState(null)\r\n    const [ loader, setLoader ] = useState(false)\r\n\r\n    //use custom hook\r\n    //const { data, loader, handleFetchData } = useFetchData(`https://api.github.com/users/${login}/following`)\r\n\r\n    const { infoHeader, handleInfoHeader } = useContext(HeaderTitleContext)\r\n\r\n    useEffect(() => {\r\n        \r\n        const testx = async () => {\r\n            handleInfoHeader(login)\r\n            setUserFollowing(null)\r\n            setLoader(true)\r\n            const API = `https://api.github.com/users/${login}/following`\r\n            const response = await fetch(API)\r\n            const result = await response.json()\r\n            setUserFollowing(result)\r\n            setLoader(false)\r\n        }\r\n\r\n        testx()\r\n    }, [login])\r\n\r\n    return (\r\n        <div className='follow flex flex-col justify-evenly'>\r\n            <span className='self-center'>People that {login} follows</span>\r\n            \r\n            <div className={`usersCtn self-center ${loader ? 'flex justify-center' : ( userFollowing?.length > 0? 'grid justify-items-center' : 'flex justify-center') }`}>\r\n                {\r\n                    userFollowing && userFollowing.length > 0 ? (\r\n                        userFollowing.map( (user, index) => (\r\n                            <UserInfo follow={true}\r\n                                key={index}\r\n                                login={user.login}\r\n                                avatar={user.avatar_url}\r\n                                url={user.html_url}\r\n                                repos_url={user.repos_url}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        loader ? <Loader/> : <p className='self-center'>no hubo</p>  \r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <button\r\n            className='self-center'\r\n            onClick={() => navigate(-1)}>Go back</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Following\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/Custom/Loader/Loader'\r\nimport UserInfo from '../../components/Custom/UserInfo/UserInfo'\r\n\r\n//import { useFetchData } from '../../Hooks/useFetchData'\r\n\r\nimport HeaderTitleContext from '../../Context/HeaderTitleContext'\r\n\r\nimport '../../styles/Follow.style.scss'\r\n\r\nconst Followers = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const { login } = useParams()\r\n    const [ userFollowers, setUserFollowers ] = useState(null)\r\n    const [ loader, setLoader ] = useState(false)\r\n\r\n    //const { data, loader } = useFetchData(`https://api.github.com/users/${login}/followers`)\r\n\r\n    const { infoHeader, handleInfoHeader } = useContext(HeaderTitleContext)\r\n\r\n    useEffect(() => {\r\n        \r\n        const testx = async () => {\r\n            handleInfoHeader(login)\r\n            setUserFollowers(null)\r\n            setLoader(true)\r\n            const API = `https://api.github.com/users/${login}/followers`\r\n            const response = await fetch(API)\r\n            const result = await response.json()\r\n            setUserFollowers(result)\r\n            setLoader(false)\r\n        }\r\n\r\n        testx()\r\n    }, [login])\r\n\r\n    return (\r\n        <div className='follow flex flex-col justify-evenly'>\r\n            <span className='self-center'>People who follows {login}</span>\r\n            \r\n            <div className={`usersCtn self-center ${loader ? 'flex justify-center' : ( userFollowers?.length > 0? 'grid justify-items-center' : 'flex justify-center') }`}>\r\n                {\r\n                    userFollowers && userFollowers.length > 0 ? (\r\n                        userFollowers.map( (user, index) => (\r\n                            <UserInfo follow={true}\r\n                                key={index}\r\n                                login={user.login}\r\n                                avatar={user.avatar_url}\r\n                                url={user.html_url}\r\n                                repos_url={user.repos_url}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        loader ? <Loader/> : <p className='self-center'>no hubo</p> \r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <button\r\n            className='self-center'\r\n            onClick={() => navigate(-1)}>Go back</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Followers\r\n","import React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\n\nimport { DarkModeProvider } from \"./Context/DarkModeContext\";\nimport { HeaderTitleContextProvider } from \"./Context/HeaderTitleContext\";\n\nimport Div100vh from \"react-div-100vh\";\nimport MainLayout from \"./Layouts/MainLayout\";\n\nimport Home from './routes/Home/Home';\nimport UserDisplay from './routes/UserDisplay/UserDisplay';\nimport Repos from './routes/Repos/Repos';\nimport Following from './routes/Following/Following';\nimport Followers from './routes/Followers/Followers';\n\nimport './styles/App.scss';\n\nfunction App() {\n\n\n  return (\n    <Div100vh className='flex flex-col'>\n      <HeaderTitleContextProvider>\n        <DarkModeProvider>\n          <MainLayout>\n            <Routes>\n              <Route exact path=\"/G-git\" element={<Home />} />\n              <Route path=\"user/:login\" element={<UserDisplay />} />\n              <Route path=\"user/:login/repos\" element={<Repos />} />\n              <Route path=\"user/:login/following\" element={<Following />} />\n              <Route path=\"user/:login/followers\" element={<Followers />} />\n              <Route path=\"*\" element={<p>Holi 404!!</p>} />\n            </Routes>\n          </MainLayout>\n        </DarkModeProvider>\n      </HeaderTitleContextProvider>\n    </Div100vh>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}