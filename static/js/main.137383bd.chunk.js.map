{"version":3,"sources":["components/Custom/Header/Header.jsx","components/Custom/Loader/Loader.jsx","components/Home/Form/Form.jsx","components/Custom/UserInfo/UserInfo.jsx","routes/Home/Home.jsx","routes/UserDisplay/UserDisplay.jsx","components/Custom/ReposDisplay/ReposDisplay.jsx","routes/Repos/Repos.jsx","routes/Following/Following.jsx","routes/Followers/Followers.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","params","children","className","Loader","Form","handleUser","handleSearchUser","action","onSubmit","e","type","placeholder","onChange","target","value","UserInfo","navigate","useNavigate","login","name","repos_url","avatar","location","followers","url","following","public_repos","created_at","src","alt","onClick","pathname","Home","useState","userName","setUserName","userData","setUserData","loader","setLoader","a","preventDefault","API","fetch","response","json","result","avatar_url","UserDisplay","useParams","userDisplayInf","setUserDisplayInf","useEffect","testx","ReposDisplay","full_name","html_url","updated_at","Repos","userRepos","setUserRepos","length","map","repo","index","Following","userFollowing","setUserFollowing","user","Followers","userFollowers","setUserFollowers","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.137383bd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = (params) => {\r\n\r\n    //console.log(params)\r\n    //const { Children } = params\r\n    const { children } = params\r\n\r\n    return (\r\n        <>\r\n            <div className='bg-Oxford_Blue w-full inline-flex justify-between'>\r\n                <h1>Lo que muestre</h1>\r\n                <h1>logo o algo</h1>\r\n            </div>\r\n            <>\r\n                {children}\r\n            </>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div>\r\n            Loading...\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\n\r\nconst Form = ({ handleUser, handleSearchUser }) => {\r\n    return (\r\n        <form \r\n            action=''\r\n            onSubmit={e => handleSearchUser(e)}\r\n            className='self-center'\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                placeholder='Name'\r\n                onChange={({ target }) => handleUser(target)}\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                value='Â¡Search!'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport '../UserInfo/UserInfo.style.scss';\r\n\r\nexport const UserInfo = (params) => {\r\n    \r\n    let navigate = useNavigate()\r\n\r\n    const {\r\n        login,\r\n        repos_url,\r\n        name,\r\n        avatar,\r\n        location,\r\n        url,\r\n        followers,\r\n        following,\r\n        public_repos,\r\n        created_at,\r\n    } = params\r\n\r\n    const navToUserDisplay = () => {\r\n        navigate({ pathname: `/user/${login}` })\r\n    }\r\n    const navToRepos = () => {\r\n        navigate({ pathname: `/user/${login}/repos` })\r\n    }\r\n    const navToFollowing = () => {\r\n        navigate({ pathname: `/user/${login}/following` })\r\n    }\r\n    const navToFollowers = () => {\r\n        navigate({ pathname: `/user/${login}/followers` })\r\n    }\r\n\r\n    return (\r\n        <div className='usercard self-center flex flex-col items-center'>\r\n            {\r\n                created_at ? (\r\n                    <>\r\n                        <p>Meet \"{login}\" {name && <>AKA <i>{name}</i></>}</p>\r\n                        <img src={avatar} alt={name} />\r\n                        <p>{location}</p>\r\n                        <p>{followers}</p>\r\n                        <p>{following}</p>\r\n                        <p>{public_repos}</p>\r\n                        <p>{created_at}</p>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <p>{login}</p>\r\n                        <img src={avatar} alt={name} />\r\n                        <p>{location}</p>\r\n                        <div className='inline-flex'>\r\n                            <span onClick={navToRepos} className='flex flex-col items-center'>\r\n                                <p>Repos</p>\r\n                                <p>{public_repos}</p>\r\n                            </span>\r\n                            <span onClick={navToFollowing} className='flex flex-col items-center'>\r\n                                <p>Following</p>\r\n                                <p>{following}</p>\r\n                            </span>\r\n                            <span onClick={navToFollowers} className='flex flex-col items-center'>\r\n                                <p>Followers</p>\r\n                                <p>{followers}</p>\r\n                            </span>\r\n                        </div>\r\n                        <button onClick={navToUserDisplay}>See more</button>\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, /*useEffect*/ } from 'react'\r\n\r\nimport Loader from '../../components/Custom/Loader/Loader'\r\nimport Form from '../../components/Home/Form/Form'\r\nimport { UserInfo } from '../../components/Custom/UserInfo/UserInfo'\r\n\r\nconst Home = () => {\r\n\r\n    //States\r\n    const [ userName, setUserName ] = useState('')\r\n    const [ userData, setUserData ]  = useState(null)\r\n    const [ loader, setLoader ] = useState(false)\r\n\r\n\r\n    const handleUser = ( { value } ) => {\r\n        setUserName(value)\r\n    }\r\n\r\n    const handleSearchUser = async e => {\r\n        e.preventDefault();\r\n        setUserData(null);\r\n        setLoader(true);\r\n        const API = `https://api.github.com/users/${userName}`;\r\n        const response = await fetch(API);\r\n        const result = await response.json();\r\n        //console.log(result);\r\n        setUserData(result);\r\n        setLoader(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='home flex flex-col w-full'>\r\n            <Form\r\n                handleUser={handleUser}\r\n                handleSearchUser={handleSearchUser}\r\n            /> \r\n\r\n            {\r\n                loader && <Loader/>\r\n            }\r\n\r\n            {\r\n               userData && <UserInfo\r\n                    login={userData.login}\r\n                    name={userData.name}\r\n                    avatar={userData.avatar_url}\r\n                    location={userData.location}\r\n                    public_repos={userData.public_repos}\r\n                    followers={userData.followers}\r\n                    following={userData.following}\r\n               />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport { UserInfo } from '../../components/Custom/UserInfo/UserInfo'\r\n\r\nconst UserDisplay = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const { login } = useParams()\r\n    const [ userDisplayInf, setUserDisplayInf ] = useState(null)\r\n\r\n    useEffect(() => {\r\n        \r\n        const testx = async () => {\r\n            setUserDisplayInf(null)\r\n            const API = `https://api.github.com/users/${login}`;\r\n            const response = await fetch(API);\r\n            const result = await response.json();\r\n            setUserDisplayInf(result)\r\n        }\r\n\r\n        testx()\r\n    }, [login])\r\n\r\n    return (\r\n        <div className='userDisplay'>\r\n            {\r\n                userDisplayInf && <UserInfo\r\n                    login={userDisplayInf.login}\r\n                    name={userDisplayInf.name}\r\n                    repos_url={userDisplayInf.repos_url}\r\n                    avatar={userDisplayInf.avatar_url}\r\n                    location={userDisplayInf.location}\r\n                    followers={userDisplayInf.followers}\r\n                    following={userDisplayInf.following}\r\n                    public_repos={userDisplayInf.public_repos}\r\n                    created_at={userDisplayInf.created_at}\r\n                />\r\n            }\r\n            <button onClick={() => navigate(-1)}>Go back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDisplay\r\n","import React from 'react'\r\n\r\nconst ReposDisplay = (params) => {\r\n\r\n    const {\r\n        name,\r\n        full_name,\r\n        html_url,\r\n        created_at,\r\n        updated_at\r\n    } = params\r\n\r\n    return (\r\n        <div className='reposcard'>\r\n            <p>{name}</p>\r\n            <p>{full_name}</p>\r\n            <p>{html_url}</p>\r\n            <p>{created_at}</p>\r\n            <p>{updated_at}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReposDisplay\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport ReposDisplay from '../../components/Custom/ReposDisplay/ReposDisplay'\r\n\r\nconst Repos = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const { login } = useParams()\r\n    const [ userRepos, setUserRepos ] = useState(null)\r\n\r\n    useEffect(() => {\r\n        \r\n        const testx = async () => {\r\n            setUserRepos(null)\r\n            const API = `https://api.github.com/users/${login}/repos`;\r\n            const response = await fetch(API);\r\n            const result = await response.json();\r\n            setUserRepos(result)\r\n        }\r\n\r\n        testx()\r\n    }, [login])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                userRepos && userRepos.length > 0 ? (\r\n                    userRepos.map( (repo, index) => (\r\n                        <ReposDisplay\r\n                            name={repo.name}\r\n                            full_name={repo.full_name}\r\n                            html_url={repo.html_url}\r\n                            created_at={repo.created_at}\r\n                            updated_at={repo.updated_at}\r\n                        />\r\n                    ))\r\n                ) : <p>no hubo</p>\r\n            }\r\n            <button onClick={() => navigate(-1)}>Go back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Repos\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport { UserInfo } from '../../components/Custom/UserInfo/UserInfo'\r\n\r\nconst Following = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const { login } = useParams()\r\n    const [ userFollowing, setUserFollowing ] = useState([])\r\n\r\n    useEffect(() => {\r\n        \r\n        const testx = async () => {\r\n            setUserFollowing(null)\r\n            const API = `https://api.github.com/users/${login}/following`;\r\n            const response = await fetch(API);\r\n            const result = await response.json();\r\n            setUserFollowing(result)\r\n        }\r\n\r\n        testx()\r\n    }, [login])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                userFollowing && userFollowing.length > 0 ? (\r\n                    userFollowing.map( (user, index) => (\r\n                        <UserInfo\r\n                            key={index}\r\n                            login={user.login}\r\n                            avatar={user.avatar_url}\r\n                            url={user.html_url}\r\n                            followers={user.followers}\r\n                            following={user.following}\r\n                            repos_url={user.repos_url}\r\n                        />\r\n                    ))\r\n                ) : <p>no hubo</p>\r\n            }\r\n            <button onClick={() => navigate(-1)}>Go back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Following\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport { UserInfo } from '../../components/Custom/UserInfo/UserInfo'\r\n\r\nconst Followers = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const { login } = useParams()\r\n    const [ userFollowers, setUserFollowers ] = useState(null)\r\n\r\n    useEffect(() => {\r\n        \r\n        const testx = async () => {\r\n            setUserFollowers(null)\r\n            const API = `https://api.github.com/users/${login}/followers`;\r\n            const response = await fetch(API);\r\n            const result = await response.json();\r\n            setUserFollowers(result)\r\n        }\r\n\r\n        testx()\r\n    }, [login])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                userFollowers && userFollowers.length > 0 ? (\r\n                    userFollowers.map( (user, index) => (\r\n                        <UserInfo\r\n                            key={index}\r\n                            login={user.login}\r\n                            avatar={user.avatar_url}\r\n                            url={user.html_url}\r\n                            followers={user.followers}\r\n                            following={user.following}\r\n                            repos_url={user.repos_url}\r\n                        />\r\n                    ))\r\n                ) : <p>no hubo</p>\r\n            }\r\n            <button onClick={() => navigate(-1)}>Go back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Followers\r\n","import React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\n\nimport { Header } from \"./components/Custom/Header/Header\";\nimport Home from './routes/Home/Home';\nimport UserDisplay from './routes/UserDisplay/UserDisplay';\nimport Repos from './routes/Repos/Repos';\nimport Following from './routes/Following/Following';\nimport Followers from './routes/Followers/Followers';\n\nimport './styles/App.scss';\nimport Div100vh from \"react-div-100vh\";\n\nfunction App() {\n\n\n  return (\n    <Div100vh>\n        <Header>\n          <Routes>\n            <Route path=\"/G-git\" element={<Home />} />\n            <Route path=\"/user/:login\" element={<UserDisplay />} />\n            <Route path=\"/user/:login/repos\" element={<Repos />} />\n            <Route path=\"/user/:login/following\" element={<Following />} />\n            <Route path=\"/user/:login/followers\" element={<Followers />} />\n          </Routes>\n        </Header>\n    </Div100vh>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}